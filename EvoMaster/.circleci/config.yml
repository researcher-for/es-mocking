# NOTE:
# updating CircleCI is giving way too many issues (eg Maven and Docker)... so we just disable it, as we run stuff
# on GitHub actions anyway.
# Keeping this file in case one day we want to re-enable it
#
version: 2

# To enable TestContainers
executorType: machine


jobs: # a collection of steps

  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/evomaster-build

    docker: # run the steps with Docker
      - image: cimg/openjdk:11.0.11

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: evomaster-build-{{ checksum "pom.xml" }}

      # gets the project dependencies
      - run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: evomaster-build-{{ checksum "pom.xml" }}


      # We need Docker in some of the tests.
      # But following option is not needed if using "executorType: machine"
      # - setup_remote_docker


      # do the actual build
      - run:
          command: mvn clean install --fae
          no_output_timeout: 20m
          environment:
            - CI_env: CircleCI

      - store_artifacts: # store the uberjar as an artifact
          path: core/target/evomaster.jar


      # Collect and export test results
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/.*-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit


      # Collect and export test outputs... needed for debugging
      - run:
          name: Save test outputs
          command: |
                  mkdir -p ~/test-results/outputs/
                  find . -type f -regex ".*/target/.*-reports/.*txt" -exec cp {} ~/test-results/outputs/ \;
          when: always
      - store_artifacts:
          path: ~/test-results/outputs

      # Save coverage
      - store_artifacts:
          path: report/target/site/jacoco-aggregate

      # Upload to CodeCov
      # Moved to GitHub Actions, as in CircleCI few tests are disabled as flacky
#      - run:
#          name: Upload coverage to CodeCov
#          command: curl -s https://codecov.io/bash | bash
